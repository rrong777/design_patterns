package com.pattern.visitor;

/**
 * 访问者角色抽象接口
 */
public interface Person {
    // 喂食宠物狗
    void feed(Cat cat); // feed 就是喂食的意思，你可以声明一个更抽象的 play() 子类实现play()可以喂食，可以玩耍 对元素操作的方法，全部放到了访问者中，喂食，玩耍遛狗，全部可以封装在这里，
    // 减轻了Home的代码实现。可以定义一个子类，专门喂食宠物，可以定义一个子类，专门溜宠物，类的职责单一

    // 喂食宠物猫
    void feed(Dog dog);
    // 如果Animal添加了一个子类，这里就要对对应子类增加一种操作方法，违反了开闭原则对于具体访问者类也需要添加具体的操作方法。
    // 依赖了具体的Dog和Cat 违反了依赖倒转原则   对象结构稳定，比如只有狗和猫，不可能变了，但是操作可能经常变，为了不影响狗和猫的结构，把操作分离。
}
